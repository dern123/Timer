{"version":3,"sources":["components/Button/Button.js","components/ResetButton/ResetButton.js","components/PauseButton/PauseButton.js","components/TimerButtons/TimerButtons.js","components/TimerDisplay/TimerDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","type","title","onClick","defaultProps","ResetButton","stopTimer","displayTimer","startTimer","PauseButton","setTimerOpened","handle","useState","clicks","event","console","log","preventDefault","push","Date","getTime","length","target","clearTimeout","TimerButtons","seconds","setSeconds","minutes","setMinutes","hours","setHours","timerOpened","useEffect","handleTime","setTimeout","TimerDisplay","zeroAdd","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39475978.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\nconst Button = props => {\r\n\tconst { className, type, title, onClick } = props;\r\n\r\n\treturn (\r\n\t\t<button className={className} type={type} onClick={onClick}>\r\n\t\t\t{title}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nButton.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\ttype: PropTypes.string.isRequired,\r\n\ttitle: PropTypes.string.isRequired,\r\n\tonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nButton.defaultProps = {\r\n\tclassName: 'btn__default',\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button/Button';\r\n\r\nconst ResetButton = props => {\r\n\tconst { stopTimer, displayTimer, startTimer } = props;\r\n\r\n\tconst resetTimer = () => {\r\n\t\tstopTimer();\r\n\t\tdisplayTimer();\r\n\t\tstartTimer();\r\n\t};\r\n\r\n\treturn <Button type=\"button\" title=\"Reset\" onClick={() => resetTimer()} />;\r\n};\r\n\r\nResetButton.propTypes = {\r\n\tstopTimer: PropTypes.func,\r\n\tdisplayTimer: PropTypes.func,\r\n\tstartTimer: PropTypes.func,\r\n};\r\n\r\nexport default ResetButton;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button/Button';\r\n\r\nconst PauseButton = props => {\r\n\tconst { setTimerOpened, handle } = props;\r\n\tconst [clicks] = useState([]);\r\n\r\n\tconst pauseTimer = () => {\r\n\t\tsetTimerOpened(true);\r\n\t\tclearTimeout(handle);\r\n\t};\r\n\r\n\tconst clickHandler = event => {\r\n\t\tconsole.log('event', event);\r\n\t\tevent.preventDefault();\r\n\t\tclicks.push(new Date().getTime());\r\n\t\t// clearTimeout(handle);\r\n\t\t// handle = setTimeout(() => {\r\n\t\tif (\r\n\t\t\tclicks.length > 1 &&\r\n\t\t\tclicks[clicks.length - 1] - clicks[clicks.length - 2] < 300\r\n\t\t) {\r\n\t\t\tpauseTimer(event.target);\r\n\t\t}\r\n\t\t// }, 300);\r\n\t};\r\n\r\n\treturn <Button type=\"button\" title=\"Pause\" onClick={clickHandler} />;\r\n};\r\n\r\nPauseButton.propTypes = {\r\n\tsetTimerOpened: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PauseButton;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button/Button';\r\nimport ResetButton from '../ResetButton/ResetButton';\r\nimport PauseButton from '../PauseButton/PauseButton';\r\n\r\nconst TimerButtons = props => {\r\n\tconst {\r\n\t\tseconds,\r\n\t\tsetSeconds,\r\n\t\tminutes,\r\n\t\tsetMinutes,\r\n\t\thours,\r\n\t\tsetHours,\r\n\t\ttimerOpened,\r\n\t\tsetTimerOpened,\r\n\t\tdisplayTimer,\r\n\t} = props;\r\n\tconsole.log('timerOpened', timerOpened.type);\r\n\r\n\tlet handle = null;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (timerOpened === false) {\r\n\t\t\thandleTime();\r\n\t\t}\r\n\t});\r\n\r\n\tconst handleTime = () => {\r\n\t\thandle = setTimeout(() => {\r\n\t\t\tif (seconds <= 58) {\r\n\t\t\t\tsetSeconds(seconds + 1);\r\n\t\t\t} else if (seconds >= 59) {\r\n\t\t\t\tsetSeconds(0);\r\n\t\t\t\tsetMinutes(minutes + 1);\r\n\t\t\t}\r\n\t\t\tif (minutes >= 59 && seconds >= 59) {\r\n\t\t\t\tsetMinutes(0);\r\n\t\t\t\tsetHours(hours + 1);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\tconst startTimer = () => {\r\n\t\tsetTimerOpened(false);\r\n\t};\r\n\r\n\tconst stop = () => {\r\n\t\tsetSeconds(0);\r\n\t\tsetMinutes(0);\r\n\t\tsetHours(0);\r\n\t};\r\n\r\n\tconst stopTimer = () => {\r\n\t\tsetTimerOpened(true);\r\n\t\tstop();\r\n\r\n\t\tdisplayTimer();\r\n\t\tclearTimeout(handle);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{timerOpened && (\r\n\t\t\t\t<Button type=\"button\" title=\"Start\" onClick={() => startTimer()} />\r\n\t\t\t)}\r\n\r\n\t\t\t{!timerOpened && (\r\n\t\t\t\t<Button type=\"button\" title=\"Stop\" onClick={() => stopTimer()} />\r\n\t\t\t)}\r\n\t\t\t<ResetButton\r\n\t\t\t\tstopTimer={stopTimer}\r\n\t\t\t\tdisplayTimer={displayTimer}\r\n\t\t\t\tstartTimer={startTimer}\r\n\t\t\t/>\r\n\t\t\t<PauseButton setTimerOpened={setTimerOpened} handle={handle} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nTimerButtons.propTypes = {\r\n\tseconds: PropTypes.number.isRequired,\r\n\tsetSeconds: PropTypes.func.isRequired,\r\n\tminutes: PropTypes.number.isRequired,\r\n\tsetMinutes: PropTypes.func.isRequired,\r\n\thours: PropTypes.number.isRequired,\r\n\tsetHours: PropTypes.func.isRequired,\r\n\tsetTimerOpened: PropTypes.func.isRequired,\r\n\tdisplayTimer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TimerButtons;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TimerButtons from '../TimerButtons/TimerButtons';\r\nimport './TimerDisplay.scss';\r\n\r\nconst TimerDisplay = props => {\r\n\tconst [seconds, setSeconds] = useState(57);\r\n\tconst [minutes, setMinutes] = useState(59);\r\n\tconst [hours, setHours] = useState(1);\r\n\tconst [timerOpened, setTimerOpened] = useState('true');\r\n\tconst { className } = props;\r\n\r\n\tconst zeroAdd = props => {\r\n\t\treturn <>{props < 10 ? `0${props}` : props}</>;\r\n\t};\r\n\r\n\tconst displayTimer = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<span>{zeroAdd(hours)}</span>:<span>{zeroAdd(minutes)}</span>:\r\n\t\t\t\t<span>{zeroAdd(seconds)}</span>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Timer</h3>\r\n\t\t\t<p className={className}>{displayTimer()}</p>\r\n\t\t\t<TimerButtons\r\n\t\t\t\tseconds={seconds}\r\n\t\t\t\tsetSeconds={setSeconds}\r\n\t\t\t\tminutes={minutes}\r\n\t\t\t\tsetMinutes={setMinutes}\r\n\t\t\t\thours={hours}\r\n\t\t\t\tsetHours={setHours}\r\n\t\t\t\ttimerOpened={timerOpened}\r\n\t\t\t\tsetTimerOpened={setTimerOpened}\r\n\t\t\t\tdisplayTimer={displayTimer}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nTimerDisplay.propTypes = {\r\n\tseconds: PropTypes.number,\r\n\tminutes: PropTypes.number,\r\n\thours: PropTypes.number,\r\n\ttimerOpened: PropTypes.bool,\r\n};\r\n\r\nTimerDisplay.defaultProps = {\r\n\tclassName: 'display__default-cifral',\r\n};\r\n\r\nexport default TimerDisplay;\r\n","import './App.css';\nimport TimerDisplay from './components/TimerDisplay/TimerDisplay';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<TimerDisplay />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}